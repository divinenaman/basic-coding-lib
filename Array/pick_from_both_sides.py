# https://www.interviewbit.com/problems/pick-from-both-sides/

# NOT OPTIMAL BUT MORE VERBOSE
# class Solution:
#     def solve(self, A, B):
#         idx = len(A) - B 
#         maxx = None
#         while idx <= len(A):
#             s = 0
#             f = []
#             for i in range(idx, idx + B):
#                 f.append(i)
#                 s += A[i % len(A)]
#             if maxx == None or s > maxx:
#                 maxx = s
#             idx += 1
#         return maxx

class Solution:
    def solve(self, A, B):
        idx = len(A) - B 

        s = 0
        for i in range(idx, idx + B):
            s += A[i % len(A)]
        
        maxx = s
        idx += 1

        while idx <= len(A):
            s = s - A[(idx-1) % len(A)] + A[(idx + B - 1) % len(A)]    
            if s > maxx:
                maxx = s
            idx += 1
        return maxx

o = Solution()

A1 = [ -533, -666, -500, 169, 724, 478, 358, -38, -536, 705, -855, 281, -173, 961, -509, -5, 942, -173, 436, -609, -396, 902, -847, -708, -618, 421, -284, 718, 895, 447, 726, -229, 538, 869, 912, 667, -701, 35, 894, -297, 811, 322, -667, 673, -336, 141, 711, -747, -132, 547, 644, -338, -243, -963, -141, -277, 741, 529, -222, -684, 35 ]
B1 = 48

A2 = [ -969, -948, 350, 150, -59, 724, 966, 430, 107, -809, -993, 337, 457, -713, 753, -617, -55, -91, -791, 758, -779, -412, -578, -54, 506, 30, -587, 168, -100, -409, -238, 655, 410, -641, 624, -463, 548, -517, 595, -959, 602, -650, -709, -164, 374, 20, -404, -979, 348, 199, 668, -516, -719, -266, -947, 999, -582, 938, -100, 788, -873, -533, 728, -107, -352, -517, 807, -579, -690, -383, -187, 514, -691, 616, -65, 451, -400, 249, -481, 556, -202, -697, -776, 8, 844, -391, -11, -298, 195, -515, 93, -657, -477, 587 ]
B2 = 81

print("A", len(A2))
print(o.solve(A2,B2))